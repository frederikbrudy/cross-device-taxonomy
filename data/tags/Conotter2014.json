{
  "user_device_rel": "1 person to n devices",
  "target_users": "Individual; Expert users",
  "pid": "Conotter2014",
  "focus": "Software",
  "device_mount": "Handheld; Placed loosely around user (e.g., table)",
  "pid_done": "2",
  "scale": "Near, personal space",
  "input_modalities": "Touch",
  "tracking_range": ">5-6cm from surface. Predictive algorithm when getting closer to the table.",
  "devices_included": "Phone",
  "use_cases_desc": "- \"I started to watch a video on my tablet. My kids\r\nwanted to play games with the tablet, so I moved the\r\nvideo player to my phone and continued watching the\r\nvideo with it\".\r\n- \"I took a photo with my phone and attached it to the\r\ndocument my business partner was writing on his lap-\r\ntop, next to me\".\r\n- \"On my way home, I browsed the web with my phone\r\nand found three interesting pages. When I arrived at\r\nhome, I moved the browser tabs to my tablet and con-\r\ntinued reading the pages with it.\"",
  "contentlength": "5.5",
  "contribution_desc": "The paper introduces a rear-facing camera based device pairing mode. The screens of multiple handheld phones are paired together to a large virtual canvas by levergaing the rear-facing cameras of a device to detect its relative positions and orientation to other devices. \r\nVirtual objects can then be transferred between multiple screens. \r\n\r\nThe handheld device needs to have access to some physical details about other devices in order to determine its 3D position and orientation. Based on the velocity of the camera images, \"we can predict\r\nthe linear motion together with the expected position\r\nof the device in the next frame.\"\r\n\r\nThe authors write about a \"large scale\" user study, however details are entirley ommited. ",
  "pid_access": 1533645805,
  "papertype": "Full paper",
  "tracking_characteristic": "Inside-out tracking; Location 3D; Tracking devices only",
  "output_modalities": "Screen output",
  "interaction_techniques": "UI distribution; Data transfer/sharing; Cross-device task chaining",
  "use_cases": "Entertainment; Knowledge workers; Task continuation",
  "tracking_tech": "Camera-based tracking",
  "network_infrastructure": "WiFi",
  "contribution": "Tracking technology; Interaction techniques; Toolkit, middleware",
  "crossdevice_def": "\"A key challenging problem in multi-device use is how to transfer virtual objects (such as media files or application windows) from the screen of one device to the screen of another\r\napparatus.\""
}